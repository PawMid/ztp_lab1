openapi: '3.0.3'
info:
  title: 'System rezerwacji książek - Biblioteka'
  version: '0.0.2'
servers:
  - url: 'http://localhost:5000'
    description: 'Domyślny adres używany przez framework Flask'
paths:
  /users:
    get:
      summary: 'Zwraca listę użytkowników'
      tags:
        - 'users'
      responses:
        200:
          description: 'Lista użytkowników zwrócona powodzeniem'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                example:
                      - id: 10
                        username: 'Jan Nowak'
                      - id: 20
                        username: 'Grażyna Kowalska'
                        
    post:
      summary: 'Dodaje nowego użytkownika do systemu'
      tags:
        - 'users'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              Przykład 1:
                value:
                  username: 'Jan Nowak'
                  
              Przykład 2:
                value:
                  username: 'Grażyna Kowalska'
                 
      responses:
        200:
          description: 'Użytkownik dodany do systemu z powodzeniem'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Przykład 1:
                  value:
                    id: 10
                    username: 'Jan Nowak'
                    
                Przykład 2:
                  value:
                    id: 20
                    username: 'Grażyna Kowalska'
                    
  /users/{id}:
    get:
      summary: 'Informacje o koncie użytkownika o podanym {id}'
      tags:
        - 'users'
      parameters:
        - in: path
          name: 'id'
          schema:
            type: integer
          required: true
          description: 'Unikatowy identyfikator użytkownika'
          example: 10
            
      responses:
        200:
          description: 'Informacje o koncie użytkownika'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Przykład 1:
                  value:
                    id: 10
                    username: 'Jan Nowak'
                    books: []
                      
                Przykład 2:
                  value:
                    id: 20
                    username: 'Grażyna Kowalska'
                    books: 
                      - tytul: 'Praktyczna inżynieria wsteczna. Metody, techniki i narzędzia'
                        author: 'Gynvael Coldwind'
                        rental: 01-10-2021
                        
                      - tytul: 'Python. Leksykon kieszonkowy'
                        author: 'Mark Lutz'
                        rental: 10-10-2021
                      
                    
                      
        400:
          description: 'Brak ID użytkownika lub ID w złym formacie'
        404:
          description: 'Użytkownik o podanym ID nie istnieje'
    delete:
      summary: 'Usuwa użytkownika o podanym {id} z systemu'
      description: 'Nie można usunąć użytkownika jeśli posiada na koncie nie oddane książki'
      tags:
        - 'users'
      parameters:
        - in: path
          name: 'id'
          schema:
            type: integer
          required: true
          description: 'Unikatowy identyfikator użytkownika'
          example: 10
      responses:
        200:
          description: 'Usunięcie użytkownika z systemu zakończyło się powodzeniem'
        400:
          description: 'Brak ID użytkownika lub ID w złym formacie'
        403:
          description: 'Nie można usunąć użytkownika z powodu nie zwrócenia wszystkich książek'
        404:
          description: 'Użytkownik o podanym ID nie istnieje'

  /books:
    get:
      summary: 'Zwraca listę tytułów książek'
      description: 'Metoda zwraca listę wszystkich tytułów książek w bazie danych w przypadku gdy parametr {available} jest ustawiony na false.
      W przypadku gdy parametr {available} jest ustawiony na true lista powinna zawierać tylko tytuły które posiadają nie wypożyczone egzemplarze.'
      tags:
        - 'books'
      parameters:
        - name: 'available'
          in: query
          schema:
            type: boolean
          description: 'Umożliwia filtrowanie dostępnych egzemplarzy'
          example: true
      responses:
        200:
          description: 'Lista tytułów zwrócona z powodzeniem'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
              example:
                - id: 1
                  title: 'Praktyczna inżynieria wsteczna. Metody, techniki i narzędzia'
                  author: 'Gynvael Coldwind'
                  quantity: 2
                - id: 2
                  title: 'Zrozumieć programowanie'
                  author: 'Gynvael Coldwind'
                  quantity: 15
                - id: 3
                  title: 'Python. Wprowadzenie, wydanie V'
                  author: 'Mark Lutz'
                  quantity: 3
                - id: 4
                  title: 'Python. Leksykon kieszonkowy'
                  author: 'Mark Lutz'
                  quantity: 5
                - id: 5
                  title: 'Python. Zadania z programowania. Przykładowe imperatywne rozwiązania'
                  author: 'Mirosław J. Kubiak'
                  quantity: 7
  /books/{id}:
    get:
      summary: 'Zwraca informacje na temat wypożyczonych egzemplarzy dla tytułu o podanym {id}'
      tags:
        - 'books'
      parameters:
        - in: path
          name: 'id'
          schema:
            type: integer
          required: true
          description: 'Unikatowy identyfikator tytułu książki'
          example: 3
      responses:
        200:
          description: Lista egzemplarzy danego tytułu zwrócona powodzeniem.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
              example:
                - id: 3
                  title: 'Python. Wprowadzenie, wydanie V'
                  author: 'Mark Lutz'
                  quantity: 3
                  rentals:
                    - id: 10
                      rental: '2021-10-15'
                      user:
                        id: 10
                        name: 'Jan Nowak'
                    - id: 17
                      rental: '2021-10-17'
                      user:
                        id: 20
                        name: 'Grażyna Kowalska'
  /books/rent/{id}:
    patch:
      summary: 'Wypożyczenie egzemplarza książki o podanym {id}'
      tags:
        - 'books'
      parameters:
        - name: 'id'
          in: path
          required: true
          example: 3
          schema:
            type: integer
            description: 'Identyfikator książki wypożyczanej przez użytkownika'
        - name: 'user'
          in: header
          required: true
          example: 20
          schema:
            type: integer
            description: 'Identyfikator użytkownika który wypożycza książkę'
      responses:
        201:
          description: 'Wypożyczenie egzemplarza zakończone powodzeniem'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
              example:
                - id: 3
                  title: 'Python. Wprowadzenie, wydanie V'
                  author: 'Mark Lutz'
                  quantity: 4
                  rentals:
                    - id: 17
                      rental: '2021-10-17'
                      user:
                        id: 20
                        name: 'Grażyna Kowalska'
        400:
          description: 'Podany identyfikator książki nie istnieje lub jest nieprawidłowy'
        401:
          description: 'Podany identyfikator użytkownika nie istnieje lub jest nieprawidłowy'
        409:
          description: 'Nie ma dostępnych wolnych egzemplarzy dla podanego identyfikatora książki'

  /books/return/{id}:
    patch:
      summary: 'Zwrot wypożyczonego egzemplarza książki o podanym {id}'
      tags:
        - 'books'
      parameters:
        - name: 'id'
          in: path
          required: true
          example: 3
          schema:
            type: integer
            description: 'Identyfikator książki zwracanej przez użytkownika'
        - name: 'user'
          in: header
          required: true
          example: 20
          schema:
            type: integer
            description: 'Identyfikator użytkownika który zwraca książkę'
      responses:
        201:
          description: 'Zwrot wypożyczonego egzemplarza zakończony powodzeniem'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
              example:
                - id: 3
                  title: 'Python. Wprowadzenie, wydanie V'
                  author: 'Mark Lutz'
                  quantity: 4
                  rentals:
                    - id: 17
                      rental: '2021-10-17'
                      return: '2021-10-23'
                      user:
                        id: 20
                        name: 'Grażyna Kowalska'
        400:
          description: 'Podany identyfikator książki nie istnieje lub jest nieprawidłowy'
        401:
          description: 'Podany identyfikator użytkownika nie istnieje lub jest nieprawidłowy'
        409:
          description: 'Użytkownik nie ma aktualnie wypożyczonych egzemplarzy dla podanego identyfikatora książki'

components:
  schemas:
    User:
      description: 'Informacje o użytkowniku systemu'
      properties:
        id:
          type: integer
          description: 'Unikatowy identyfikator użytkownika'
          nullable: false
        username:
          type: string
          description: 'Nazwa użytkownika'
          nullable: false
        

    Book:
      description: 'Informacje o książce'
      properties:
        id:
          type: integer
          nullable: false
          description: 'Unikatowy identyfikator książki'
        title:
          type: string
          nullable: false
          description: 'Tytuł książki'
        author:
          type: string
          nullable: false
          description: 'Autor książki'
        quantity:
          type: integer
          nullable: false
          description: 'Liczba dostępnych egzemplarzy'
        rentals:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/BookRental'

    BookRental:
      description: 'Szczegóły wypożyczonego egzemplarza książki'
      properties:
        id:
          type: integer
          description: 'Unikatowy identyfikator wypożyczonego egzemplarza książki'
          nullable: false
        rental:
          type: string
          description: 'Data wypożyczenia egzemplarza'
          format: date
          nullable: false
        return:
          type: string
          description: 'Data zwrotu egzemplarza'
          format: date
          nullable: true
        user:
          type: object
          nullable: false
          properties:
            id:
              type: integer
              description: 'Unikatowy identyfikator użytkownika'
            name:
              type: string
              description: 'Nazwa użytkownika'